class Solution
{
    void merge(int arr[], int l, int m, int r)
    {
         // Your code here
        int len1 = m-l+1;
        int len2 = r-m+1;
        int[] arr1 = new int[l1];
        int[] arr2 = new int[l2];
        int mainIndex = l;
        for(int i = 0;i<len1;i++)
            arr1[i]=arr[mainIndex++];
        for(int i = 0;i<len2;i++)
            arr2[i]=arr[mainIndex++];
        int index1=0;
        int index2=0;
        mainIndex=l;
        while(index1<len1 && index2<len2)
        {
            if(arr1[index1]<arr2[index2])
                arr[mainIndex++]=arr1[index1];
            else
                arr[mainIndex++]=arr2[index2];
        }
        while(index1<len1)
            arr[mainIndex++]=arr1[index1];
        while(index2<len2)
            arr[mainIndex++]=arr2[index2];
            
        
    }
    void mergeSort(int arr[], int l, int r)
    {
        //code here
        if(l>=r)
            return;
        int mid = l+(r-l)/2;
        mergeSort(arr,l,mid);
        mergeSort(arr,mid+1,r);
        merge(arr,l,mid,r);
    }
}
